/*
 * Copyright Â© 2018 www.muvi.com
 *
 * @author  Sunil Kumar Behera <sunilkumar@muvi.com>
 */

package com.seleniumtests.webpage;

import static com.seleniumtests.core.CustomAssertion.assertEquals;

import static com.seleniumtests.core.Locator.locateByXPath;
import static org.testng.Assert.assertTrue;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.eclipse.jetty.client.api.Request.Listener;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.seleniumtests.core.SeleniumTestsContextManager;
import com.seleniumtests.core.TestLogging;
import com.seleniumtests.dataobject.CompanyName;

import com.seleniumtests.dataobject.NewRandomData;
import com.seleniumtests.dataobject.RandomAddress;
import com.seleniumtests.dataobject.RandomEmailID;
import com.seleniumtests.dataobject.RandomMobileNo;
import com.seleniumtests.dataobject.RandomName;
import com.seleniumtests.dataobject.RandomNewStateName;
import com.seleniumtests.dataobject.RandomPassword;
import com.seleniumtests.dataobject.RandomZip;
import com.seleniumtests.dataobject.WebUIData;
import com.seleniumtests.webelements.ButtonElement;
import com.seleniumtests.webelements.CheckBoxElement;
import com.seleniumtests.webelements.HtmlElement;
import com.seleniumtests.webelements.PageObject;
import com.seleniumtests.webelements.SelectList;
import com.seleniumtests.webelements.TextFieldElement;

public class FeaturedAndContent extends PageObject {
	public static String url = null;
	public static String URL = null;

	public static Map<Object, Map<Object, Object>> mastermap = new HashMap<Object, Map<Object, Object>>();

	public FeaturedAndContent(final boolean openPageURL) throws Exception {

		super(HtmlPage, openPageURL ? url = SeleniumTestsContextManager.getThreadContext().getAppURL() : null);
	}

	private static final ButtonElement HtmlPage = new ButtonElement("Click on Login button ", locateByXPath("//html"));

	String sectiontype = "//select[@id='section_type']";
	String contenttype = "//select[@id='section_type']";
	private static final ButtonElement ClickOnSaveButton = new ButtonElement("Click on save button",
			locateByXPath("//h4[contains(text(),'Add Featured Section')]/../..//button[@type='submit'][contains(text(),'Save')]"));
	//button[@type='submit'][contains(text(),'Save')]
	private static final TextFieldElement sectionname = new TextFieldElement("Enter Section name",
			locateByXPath("//input[@id='section_name']"));
	private static final ButtonElement sectionnameCheck = new ButtonElement(
			"Enter Section name to check is available or not",
			locateByXPath("//span[contains(text(),'Auto Generated Feature Section')]/..//em[@class='icon-trash icon']"));
	//h4[contains(text(),'Auto Generated Feature Section')]
	private static final ButtonElement sectionnamePresent = new ButtonElement(
			"Enter Section name to check is available or not",
			locateByXPath("//span[contains(text(),'Auto Generated Feature Section')]"));
	//h4[contains(text(),'Auto Generated Feature Section')]
	private static final ButtonElement ClickOnAddFeatured = new ButtonElement("Scroll element and click it",
			locateByXPath("//button[@id='nextbtn'][contains(text(),'Add Featured Section')]"));

	private static final ButtonElement forConfirmation = new ButtonElement("Click on Confirmation",
			locateByXPath("//button[@class='confirm']"));
	private static final ButtonElement clickOnOk = new ButtonElement("Click on Confirmation",
			locateByXPath("//button[@class='confirm']"));
	private static final ButtonElement clickOnPriviewButton = new ButtonElement("Click on preview button",
			locateByXPath("//a[@id='prev_btn_disable']"));

	// Feature section
	// span[contains(text(),'Test AutoGenerated
	// flow')]/../..//a[contains(text(),'YouTube Nature')]
	// span[contains(text(),'Test AutoGenerated
	// flow')]/../..//a[contains(text(),'Test content')]
	// span[contains(text(),'Test AutoGenerated
	// flow')]/../..//a[contains(text(),'New updated video')]
	private static final ButtonElement playNowButton = new ButtonElement("Click on playnow button", locateByXPath(
			"//span[contains(text(),'Test AutoGenerated flow')]/../..//a[contains(text(),'YouTube Nature')]/../..//a[@class='playbtn']"));
	private static final ButtonElement ClickOnVideoTitle = new ButtonElement("Click on video title", locateByXPath(
			"//span[contains(text(),'Test AutoGenerated flow')]/../..//a[contains(text(),'YouTube Nature')]"));
	private static final ButtonElement ClickOnAddFav = new ButtonElement("Click on back button",
			locateByXPath("//span[@id='favtext']"));
	private static final ButtonElement HomepageButton = new ButtonElement("Click on Home button",
			locateByXPath("//a[@class='logo']//img"));
	private static final HtmlElement matchText = new HtmlElement("Display content for feature section file",
			locateByXPath(
					"//span[contains(text(),'Auto Generated Feature Section')]/../..//a[contains(text(),'YouTube Nature')]"));
	private static final HtmlElement matchText1 = new HtmlElement("Display content for feature section file",
			locateByXPath("//h2[@class='txt-camel']/../..//a[contains(text(),'YouTube Nature')]"));
	private static final ButtonElement Deletemyfav = new ButtonElement("Delete my fav data", locateByXPath(
			"//h2[@class='txt-camel']/../..//a[contains(text(),'YouTube Nature')]/../..//i[@class='fa fa-trash-o']"));
	private static final ButtonElement confirmDelete = new ButtonElement("Delete my confirmation",
			locateByXPath("//a[contains(@class,'action_btn deleteFavContent')]"));
	private static final HtmlElement TVData = new HtmlElement("Display content for feature section file",
			locateByXPath("//a[contains(text(),'YouTube Nature')]"));
	private static final HtmlElement MovieData = new HtmlElement("Display content for feature section file",
			locateByXPath("//a[contains(text(),'New updated video')]"));
	private static final HtmlElement newudatednature = new HtmlElement("Display content for feature section file",
			locateByXPath(
					"//span[contains(text(),'Auto Generated Feature Section')]/../..//li[3]//a[contains(text(),'New updated video')]"));
	private static final HtmlElement newudatednaturesingleAudio = new HtmlElement(
			"Display content for feature section file", locateByXPath(
					"//span[contains(text(),'Auto Generated Feature Section')]/../..//li[1]//a[contains(text(),'YouTube Nature')]"));
	private static final HtmlElement matchTextMyFav = new HtmlElement("Display element", locateByXPath(
			"//span[contains(text(),'Auto Generated Feature Section')]/../..//a[contains(text(),'YouTube Nature')]"));
	private static final HtmlElement mouseoverOnUserMenu = new HtmlElement("Mouse over on user menu",
			locateByXPath("//a[@class='profile dropdown-toggle _user-menu']"));
	private static final ButtonElement ClickOnwatcmyfav = new ButtonElement("Click on Watch history",
			locateByXPath("//a[@class='favourites']"));
	private static final HtmlElement lastSeenContentMatch = new HtmlElement("History list shoud be display",
			locateByXPath("//li[1]//a[contains(text(),'New updated video')]"));
	private static final ButtonElement playNowButtonmanualVideo = new ButtonElement("Click on playnow button",
			locateByXPath(
					"//span[contains(text(),'Test AutoGenerated flow')]/../..//a[contains(text(),'New updated video')]/../..//a[@class='playbtn']"));
	private static final ButtonElement resumeVideo = new ButtonElement("Click on yes for resume video",
			locateByXPath("//div[@id='play_confirm']//button[@id='confirm_yes']"));
	private static final ButtonElement ClickOnTvButton = new ButtonElement("Click on yes for resume video",
			locateByXPath("//a[contains(text(),'TV')]"));
	private static final ButtonElement ClickOnMuviButton = new ButtonElement("Click on yes for resume video",
			locateByXPath("//a[contains(text(),'Movie')]"));

	private static final ButtonElement Delete = new ButtonElement("Delete feature section name",
			locateByXPath("//span[contains(text(),'Auto Generated Feature Section')]/..//em[@class='icon-trash icon']"));
	//h4[contains(text(),'Auto Generated Feature Section')]
	private static final ButtonElement Featurename = new ButtonElement("Feature section name mathc with condition",
			locateByXPath("//span[contains(text(),'Auto Generated Feature Section')]"));
	//h4[contains(text(),'Auto Generated Feature Section')]
	public FeaturedAndContent SelectByText(final String Text, String xpath) throws Exception {
		waitForSeconds(1);
		SelectList s = new SelectList(Text, By.xpath(xpath));
		s.selectByText(Text);
		return this;

	}

	public FeaturedAndContent SimulateClick(ButtonElement element) throws Exception {
		waitForSeconds(2);
		element.simulateClick();
		return this;
	}

	public FeaturedAndContent AssertEquals(final String actualText, final String expectedText) throws Exception {
		assertEquals(actualText.toLowerCase(), expectedText.toLowerCase(), "Actual text and Expected Text Not Equal");
		return this;
	}

	public FeaturedAndContent Click(ButtonElement element) throws Exception {

		element.waitForPresent(10);
		element.click();
		return this;
	}

	public FeaturedAndContent Wait(int value) throws Exception {
		waitForSeconds(value);

		return this;

	}

	public FeaturedAndContent WaitForElementPresent(final HtmlElement element) {
		element.waitForPresent(20);

		return this;
	}

	public FeaturedAndContent MouseOver(HtmlElement element) throws Exception {

		element.waitForPresent(10);
		element.mouseOver();
		return this;
	}

	public FeaturedAndContent SimulateMouseOver(HtmlElement element) throws Exception {

		element.waitForPresent(10);
		element.simulateMouseOver();
		return this;
	}

	public FeaturedAndContent Textbox(TextFieldElement element, final String Text) throws Exception {

		element.clearAndType(Text);
		return this;
	}

	public FeaturedAndContent scrollToElement() throws Exception {

		WebElement element = driver
				.findElement(By.xpath("//button[@id='nextbtn'][contains(text(),'Add Featured Section')]"));
		Actions actions = new Actions(driver);
		actions.moveToElement(element);
		actions.click().perform();

		return this;
	}

	public FeaturedAndContent Clickat(ButtonElement element) throws Exception {

		element.waitForPresent(10);
		element.clickAt();
		return this;
	}

	public WebUIPage ClickOnDeleteContent(WebUIData WebUIData) throws Exception {

		final ButtonElement webelement = new ButtonElement("Click on  delete content",
				locateByXPath("//div[@class='Collapse-Block']//h4[contains(text(),'" + WebUIData.getName()
						+ "')]/../..//h5[contains(text(),'" + WebUIData.getComanyname() + "')]/../div//em"));

		webelement.clickAt();
		return new WebUIPage(false);

	}

	public FeaturedAndContent ClickOnDeleteFeature(WebUIData WebUIData) throws Exception {

		final ButtonElement webelement = new ButtonElement("Click on  delete feature",
				locateByXPath("//div[@class='Collapse-Block']//div/h4[contains(text(),'" + WebUIData.getName()
						+ "')]/..//em[@class='icon-trash icon']"));

		webelement.clickAt();
		return new FeaturedAndContent(false);

	}

	public FeaturedAndContent ClickOnDeleteAutoFeature() throws Exception {

		final ButtonElement webelement = new ButtonElement("Click on  delete feature", locateByXPath(
				"//div[@class='Collapse-Block']//div/h4[contains(text(),'Auto Generated Feature Section')]/..//em[@class='icon-trash icon']"));

		WebElement element = driver.findElement(By.xpath(
				"//div[@class='Collapse-Block']//div/h4[contains(text(),'Auto Generated Feature Section')]/..//em[@class='icon-trash icon']"));

		Actions action = new Actions(driver);

		action.moveToElement(element).build().perform();

		webelement.simulateClick();
		return new FeaturedAndContent(false);

	}

	public AddFeatureSection AddNewFeaturedManually(WebUIData WebUIData) throws Exception {
		Wait(10).Clickat(ClickOnAddFeatured)
				// .scrollToElement()
				// .Click(ClickOnAddFeatured)
				.SelectByText("Manually Generated", sectiontype).SelectByText("Vedio", contenttype)
				.Textbox(sectionname, WebUIData.getName()).Click(ClickOnSaveButton).Wait(5);

		return new AddFeatureSection(false);
	}

	public VerifyEndUserPreview deleteContentFromFeature(WebUIData WebUIData) throws Exception {

		ClickOnDeleteContent(WebUIData).Click(forConfirmation).WindowSwitch(1).refresh();

		return new VerifyEndUserPreview(false);
	}

	public FeaturedAndContent pressEnter() throws Exception {
		Actions act = new Actions(driver);
		act.sendKeys(Keys.ENTER).perform();
		return this;
	}

	public CmsDashBoard deleteFeatureSection(WebUIData WebUIData) throws Exception {
		ClickOnDeleteFeature(WebUIData).pressEnter().SimulateMouseOver(forConfirmation)

				.SimulateClick(forConfirmation).Wait(10)/*.ClickOnDeleteFeature(WebUIData).pressEnter()
				.SimulateMouseOver(forConfirmation)

				.SimulateClick(forConfirmation).Wait(10)*/

		;

		return new CmsDashBoard(false);
	}

	String sectioncriteria = "//select[@id='section_criteria']";
	String sectionCatagory = "//select[@id='section_category']";
	String contentType = "//select[@id='content_types']";

	private static final TextFieldElement contentLimit = new TextFieldElement("Enter content limit in text box",
			locateByXPath("//input[@id='content_limit']"));

	public FeaturedAndContent pageScrollDown() throws Exception {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("window.scrollBy(0,1000)");

		return this;
	}

	public SelectList SelectText(final String Text) throws Exception {
		waitForSeconds(1);
		SelectList s = new SelectList(Text, By.xpath(sectioncriteria));
		s.selectByText(Text);

		return s;

	}

	public FeaturedAndContent pressSpace() throws Exception {
		Actions act = new Actions(driver);
		act.sendKeys(Keys.SPACE).perform();
		return this;
	}

	public FeaturedAndContent refreshPage() throws Exception {
		refresh();
		return this;
	}

	public FeaturedAndContent closeCurrentWindow() throws Exception {
		driver.close();
		return this;
	}

	public FeaturedAndContent WindowSwitch(int val) throws Exception {
		TestLogging.logWebStep("select new window", false);
		driver.switchTo().window((String) driver.getWindowHandles().toArray()[val]);
		waitForSeconds(1);

		return this;
	}

	public FeaturedAndContent AssertTrue(final Boolean actualText2) throws Exception {
		assertTrue(actualText2, "Text should  be visible but now its not visible");
		return this;
	}

	public FeaturedAndContent goBackPage() {
		goBack();
		return this;
	}

	public FeaturedAndContent DeleteFeatureSection(String SectionName) throws Exception {

		try {
			while (Featurename.getText().contains(SectionName)) {

				SimulateClick(Delete).Wait(1).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
						.SimulateClick(forConfirmation).Wait(1);

			}
		} catch (Exception e) {

		}
		return this;

	}

	public WebUIPage AddNewFeaturedAuto(WebUIData WebUIData) throws Exception {
		// .getText().equalsIgnoreCase("Auto Generated Feature Section")

		if (sectionnamePresent.isElementPresent()) {
			DeleteFeatureSection("Auto Generated Feature Section").Clickat(ClickOnAddFeatured)
					.SelectByText("Auto Generated", sectiontype).SelectByText("Vedio", contenttype)
					.Wait(10).Textbox(sectionname, "Auto Generated Feature Section").SelectByText("All", sectionCatagory)
					.SelectByText("All", contentType)

			;
		} else {
			Clickat(ClickOnAddFeatured).SelectByText("Auto Generated", sectiontype).SelectByText("Vedio", contenttype)
					.Textbox(sectionname, "Auto Generated Feature Section").SelectByText("All", sectionCatagory)
					.SelectByText("All", contentType);

		}

		if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("Most Viewed")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(10).Click(clickOnPriviewButton).WindowSwitch(1)
					.Wait(10);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);

			pageScrollDown().Wait(10);

			Click(playNowButton).Wait(2).pressSpace().Wait(10).goBackPage().Wait(10).pageScrollDown()
					.AssertTrue(matchText.isDisplayed()).WindowSwitch(0).Wait(5);

			new CmsDashBoard(false).Wait(10).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("Top Rated")) {
			Click(ClickOnSaveButton).Wait(5)

			;

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("Latest Uploads")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(5).Click(clickOnPriviewButton).WindowSwitch(1);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);
			pageScrollDown().Wait(20).AssertTrue(newudatednature.isDisplayed())
					/*.AssertTrue(newudatednaturesingleAudio.isDisplayed())*/.WindowSwitch(0).Wait(5);
			new CmsDashBoard(false).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("Content Category")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(5).Click(clickOnPriviewButton).WindowSwitch(1);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);
			pageScrollDown().Click(ClickOnTvButton).Wait(5).AssertTrue(TVData.isDisplayed()).Click(ClickOnMuviButton)
					.Wait(5).AssertTrue(MovieData.isDisplayed()).WindowSwitch(0).Wait(5);
			new CmsDashBoard(false).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("My Library")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(5).Click(clickOnPriviewButton).WindowSwitch(1);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);

			pageScrollDown().Wait(10).Click(ClickOnVideoTitle).Click(ClickOnAddFav).Click(HomepageButton).Wait(5)
					.pageScrollDown().Wait(10).AssertTrue(matchTextMyFav.isDisplayed())
					.SimulateMouseOver(mouseoverOnUserMenu).SimulateClick(ClickOnwatcmyfav).Wait(5)
					.AssertTrue(matchText1.isDisplayed()).Wait(5).SimulateClick(Deletemyfav)
					.SimulateClick(confirmDelete).WindowSwitch(0).Wait(5);
			new CmsDashBoard(false).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("My Favorites")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(5).Click(clickOnPriviewButton).WindowSwitch(1);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);

			pageScrollDown().Wait(10).Click(ClickOnVideoTitle).Click(ClickOnAddFav).Click(HomepageButton).Wait(5)
					.pageScrollDown().Wait(10).AssertTrue(matchTextMyFav.isDisplayed())
					.SimulateMouseOver(mouseoverOnUserMenu).SimulateClick(ClickOnwatcmyfav).Wait(5)
					.AssertTrue(matchText1.isDisplayed()).Wait(5).SimulateClick(Deletemyfav)
					.SimulateClick(confirmDelete).WindowSwitch(0).Wait(5);
			new CmsDashBoard(false).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		} else if (SelectText(WebUIData.getContentname()).getSelectedText().equalsIgnoreCase("Recently Seen")) {
			Textbox(contentLimit, "10").Click(ClickOnSaveButton).Wait(5).Click(clickOnPriviewButton).WindowSwitch(1);
			new WebUILoginPage(false).ClickOnLogInForEndUser(WebUIData);

			pageScrollDown().Wait(10)

					.Click(playNowButtonmanualVideo).Wait(2);

			if (resumeVideo != null) {

				pressEnter().Wait(10).goBackPage().Wait(10)

				;

			} else {

				Wait(10).goBackPage().Wait(10)

				;

			}

			AssertTrue(lastSeenContentMatch.isDisplayed())

					.WindowSwitch(0).Wait(5);

			new CmsDashBoard(false).clickOnWebsite();

			Wait(5).ClickOnDeleteAutoFeature().pressEnter().SimulateMouseOver(forConfirmation)
					.SimulateClick(forConfirmation).Wait(10);

		}

		return new WebUIPage(false);
	}

}